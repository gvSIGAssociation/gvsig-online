# -*- coding: utf-8 -*-
# Generated by Django 1.11.24 on 2019-11-15 14:01
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('gvsigol_plugin_downloadman', '0011_new_model'),
    ]

    operations = [
        migrations.CreateModel(
            name='DownloadLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prepared_download_path', models.TextField(blank=True, null=True)),
                ('valid_to', models.DateTimeField(db_index=True)),
                ('link_random_id', models.TextField(db_index=True, unique=True)),
                ('status', models.CharField(choices=[('PR', 'Processed'), ('UC', 'Cancelled by the user'), ('AC', 'Cancelled by the administrator')], db_index=True, default='PR', max_length=2)),
            ],
        ),
        migrations.CreateModel(
            name='DownloadLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='DownloadRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('requested_by_external', models.CharField(max_length=500)),
                ('requested_by_user', models.CharField(blank=True, max_length=500, null=True)),
                ('requested_date', models.DateTimeField(auto_now_add=True)),
                ('validity', models.IntegerField()),
                ('authorization_request', models.TextField()),
                ('request_status', models.CharField(choices=[('RQ', 'Request queued'), ('PR', 'Processing request'), ('CT', 'Completed'), ('CE', 'Completed with errors'), ('QE', 'Error queueing request')], db_index=True, default='RQ', max_length=2)),
                ('notification_status', models.CharField(choices=[('NC', 'Notification completed'), ('NE', 'Notification error'), ('NP', 'Permanent notification error')], max_length=2, null=True)),
                ('package_retry_count', models.PositiveIntegerField(default=0)),
                ('notify_retry_count', models.PositiveIntegerField(default=0)),
                ('request_random_id', models.TextField(db_index=True)),
                ('json_request', models.TextField()),
                ('language', models.CharField(blank=True, max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='ResourceLocator',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_source', models.TextField()),
                ('layer_id', models.TextField(blank=True, null=True)),
                ('layer_id_type', models.CharField(choices=[('GN', 'GEONET_DATA_SOURCE'), ('GV', 'GVSIGOL_DATA_SOURCE')], max_length=2)),
                ('name', models.TextField()),
                ('title', models.TextField()),
                ('layer_name', models.TextField()),
                ('layer_title', models.TextField()),
                ('pending_authorization', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('AU', 'Pending authorization'), ('QP', 'Package queued'), ('PG', 'Processing resource'), ('SP', 'Queued, waiting for free space'), ('PD', 'Processed'), ('RE', 'Rejected'), ('HO', 'On hold'), ('CL', 'Cancelled'), ('ER', 'Packaging error'), ('PE', 'Permanent packaging error')], db_index=True, default='QP', max_length=2)),
                ('download_count', models.PositiveIntegerField(default=0)),
                ('resolved_url', models.TextField(blank=True, null=True)),
                ('is_dynamic', models.BooleanField(default=False)),
                ('download_link', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='gvsigol_plugin_downloadman.DownloadLink')),
                ('request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gvsigol_plugin_downloadman.DownloadRequest')),
            ],
        ),
        migrations.DeleteModel(
            name='ResourceSettings',
        ),
        migrations.AddField(
            model_name='downloadlog',
            name='resource',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gvsigol_plugin_downloadman.ResourceLocator'),
        ),
        migrations.AddField(
            model_name='downloadlink',
            name='request',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gvsigol_plugin_downloadman.DownloadRequest'),
        ),
    ]
