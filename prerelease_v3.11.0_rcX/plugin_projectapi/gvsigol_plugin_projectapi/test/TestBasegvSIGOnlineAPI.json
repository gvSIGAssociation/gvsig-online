{
	"info": {
		"_postman_id": "49a4d1fb-48c1-43c2-a9ab-1b3622e4a86e",
		"name": "Test Base gvSIGOnline API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "get_public_project_list",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"get_public_project_list\", function () {",
							"    //Comprueba que exista un proyecto p√∫blico llamado con el de las variables de ENV",
							"    const responseJson = pm.response.json();",
							"    const prj = postman.getEnvironmentVariable(\"publicprj\");",
							"    const json = responseJson.content;",
							"    let existsPrj = false;",
							"    for(var i = 0; i<json.length;i++) {",
							"        if(json[i].name == prj) {",
							"            existsPrj = true;",
							"        }",
							"    }",
							"    pm.expect(existsPrj).to.eql(true);",
							"    if(postman.getEnvironmentVariable(\"keycloak\") == 'false') {",
							"        console.log('LOCAL AUTHENTICATION')",
							"        postman.setNextRequest(\"get_api_key\")",
							"    } else {",
							"        console.log('KEYCLOAK AUTHENTICATION')",
							"        postman.setNextRequest(\"get_api_key_keycloak\")",
							"    }",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{protocol}}://{{url}}/gvsigonline/api/v1/public/projects",
					"protocol": "{{protocol}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"gvsigonline",
						"api",
						"v1",
						"public",
						"projects"
					]
				}
			},
			"response": []
		},
		{
			"name": "get_api_key",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"get_api_key\", function () {",
							"    //Asigna la variable de entorno con el token",
							"    const json = pm.response.json();",
							"    postman.setEnvironmentVariable(\"token\", \"JWT \" + json.token);",
							"    console.log(\"GET_API_KEY: \" + json.token)",
							"    postman.setNextRequest(\"get_user\")",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "username",
							"value": "{{user}}",
							"type": "default"
						},
						{
							"key": "password",
							"value": "{{password}}",
							"type": "default"
						}
					],
					"options": {
						"raw": {
							"language": "text"
						}
					}
				},
				"url": {
					"raw": "{{protocol}}://{{url}}/gvsigonline/auth/api-token-auth/",
					"protocol": "{{protocol}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"gvsigonline",
						"auth",
						"api-token-auth",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "get_api_key_keycloak",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"get_api_key\", function () {",
							"    //Asigna la variable de entorno con el token",
							"    const json = pm.response.json();",
							"    postman.setEnvironmentVariable(\"token\", \"Bearer \" + json.access_token);",
							"    console.log(\"GET_API_KEY_KEYCLOAK: \" + json.access_token)",
							"    postman.setNextRequest(\"get_project_list\")",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "username",
							"value": "{{user}}",
							"type": "default"
						},
						{
							"key": "password",
							"value": "{{password}}",
							"type": "default"
						},
						{
							"key": "client_id",
							"value": "{{client_id}}",
							"type": "default"
						},
						{
							"key": "client_secret",
							"value": "{{client_secret}}",
							"type": "default"
						},
						{
							"key": "grant_type",
							"value": "password",
							"type": "default"
						}
					],
					"options": {
						"raw": {
							"language": "text"
						}
					}
				},
				"url": {
					"raw": "https://keycloak.scolab.eu/auth/realms/ideuytest/protocol/openid-connect/token",
					"protocol": "https",
					"host": [
						"keycloak",
						"scolab",
						"eu"
					],
					"path": [
						"auth",
						"realms",
						"ideuytest",
						"protocol",
						"openid-connect",
						"token"
					]
				}
			},
			"response": []
		},
		{
			"name": "get_user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"get_user\", function () {",
							"\t//Comprueba que el usuario se llame como el de las variables de ENV\",",
							"\tconst responseJson = pm.response.json();",
							"\tconst user = postman.getEnvironmentVariable(\"user\");",
							"\t//console.log(\\\"get_user JSON:\\\" + JSON.stringify(responseJson))",
							"\tconst jsonUser = String(responseJson.content.username);",
							"\tpm.expect(jsonUser == user).to.eql(true);",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "default"
					}
				],
				"url": {
					"raw": "{{protocol}}://{{url}}/gvsigonline/api/v1/user/",
					"protocol": "{{protocol}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"gvsigonline",
						"api",
						"v1",
						"user",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "get_group_list",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"get_group_list\", function () {",
							"    const json = pm.response.json();",
							"    pm.expect(json.content.length >= 1).to.eql(true);",
							"",
							"    let existsGrp = false;",
							"    for(var i = 0; i<json.content.length ;i++) {",
							"        //console.log(json.content[i].id)",
							"        if(json.content[i].id == postman.getEnvironmentVariable(\"group_id\")) {",
							"            existsGrp = true;",
							"        }",
							"    }",
							"    pm.expect(existsGrp).to.eql(true);",
							"    ",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "default"
					}
				],
				"url": {
					"raw": "{{protocol}}://{{url}}/gvsigonline/api/v1/groups/",
					"protocol": "{{protocol}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"gvsigonline",
						"api",
						"v1",
						"groups",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "get_group",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"get_group\", function () {",
							"    const json = pm.response.json();",
							"    pm.expect(json.content.id == postman.getEnvironmentVariable(\"group_id\")).to.eql(true);",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "default"
					}
				],
				"url": {
					"raw": "{{protocol}}://{{url}}/gvsigonline/api/v1/groups/{{group_id}}/",
					"protocol": "{{protocol}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"gvsigonline",
						"api",
						"v1",
						"groups",
						"{{group_id}}",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "get_layers_from_group",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"get_layers_from_group\", function () {",
							"    const json = pm.response.json();",
							"    //pm.expect(json.content.length >= 1).to.eql(true);",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "default"
					}
				],
				"url": {
					"raw": "{{protocol}}://{{url}}/gvsigonline/api/v1/groups/{{group_id}}/layers/?group_id={{group_id}}",
					"protocol": "{{protocol}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"gvsigonline",
						"api",
						"v1",
						"groups",
						"{{group_id}}",
						"layers",
						""
					],
					"query": [
						{
							"key": "group_id",
							"value": "{{group_id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "get_platform_info",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"get_platform_info\", function () {",
							"    const json = pm.response.json();",
							"    pm.expect(json.content.gvsigonline_version != null).to.eql(true);",
							"    pm.expect(json.content.gvsigonline_plugins.length > 0).to.eql(true);",
							"    pm.expect(json.content.rest_api_calls.length > 0).to.eql(true);",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "default"
					}
				],
				"url": {
					"raw": "{{protocol}}://{{url}}/gvsigonline/api/v1/platforminfo/",
					"protocol": "{{protocol}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"gvsigonline",
						"api",
						"v1",
						"platforminfo",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "get_project_configuration",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"get_project_configuration\", function () {",
							"    const json = pm.response.json();",
							"    pm.expect(json.projects.length > 0).to.eql(true);",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "default"
					}
				],
				"url": {
					"raw": "{{protocol}}://{{url}}/gvsigonline/api/v1/projectconf",
					"protocol": "{{protocol}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"gvsigonline",
						"api",
						"v1",
						"projectconf"
					]
				}
			},
			"response": []
		},
		{
			"name": "get_project_list",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"get_project_list\", function () {",
							"    //Comprueba que exista un proyecto p√∫blico llamado con el de las variables de ENV",
							"    const responseJson = pm.response.json();",
							"    const prj = postman.getEnvironmentVariable(\"prj\");",
							"    const json = responseJson.content;",
							"    //console.log(\"get_project_list JSON:\" + JSON.stringify(responseJson))",
							"    let existsPrj = false;",
							"    console.log(\"GET_PROJECT_LIST Num:\" + json.length)",
							"    for(var i = 0; i<json.length;i++) {",
							"        //console.log(json[i].name)",
							"        if(json[i].name == prj) {",
							"            existsPrj = true;",
							"            postman.setEnvironmentVariable(\"prjid\", json[i].id);",
							"        }",
							"    }",
							"    pm.expect(existsPrj).to.eql(true);",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "default"
					}
				],
				"url": {
					"raw": "{{protocol}}://{{url}}/gvsigonline/api/v1/projects",
					"protocol": "{{protocol}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"gvsigonline",
						"api",
						"v1",
						"projects"
					]
				}
			},
			"response": []
		},
		{
			"name": "get_project",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"get_project\", function () {",
							"    //Comprueba que exista un proyecto p√∫blico llamado con el de las variables de ENV",
							"    const responseJson = pm.response.json();",
							"    //console.log(JSON.stringify(responseJson))",
							"    const json = responseJson.content;",
							"    const prj = postman.getEnvironmentVariable(\"prj\");",
							"    pm.expect(json.name).to.eql(prj);",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "default"
					}
				],
				"url": {
					"raw": "{{protocol}}://{{url}}/gvsigonline/api/v1/projects/{{prjid}}/",
					"protocol": "{{protocol}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"gvsigonline",
						"api",
						"v1",
						"projects",
						"{{prjid}}",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "get_groups_from_project",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"get_groups_from_project\", function () {",
							"    const responseJson = pm.response.json();",
							"    const json = responseJson.content;",
							"",
							"    let existsGrp = false;",
							"    //console.log(\"GET_PROJECT_LIST Num:\" + json.length)",
							"    for(var i = 0; i<json.length;i++) {",
							"        //console.log(json[i].name)",
							"        if(json[i].id == postman.getEnvironmentVariable(\"group_id\")) {",
							"            existsGrp = true;",
							"        }",
							"    }",
							"",
							"    pm.expect(existsGrp).to.eql(true);",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "default"
					}
				],
				"url": {
					"raw": "{{protocol}}://{{url}}/gvsigonline/api/v1/projects/{{prjid}}/groups/",
					"protocol": "{{protocol}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"gvsigonline",
						"api",
						"v1",
						"projects",
						"{{prjid}}",
						"groups",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "get_layers_from_project",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"get_layers_from_project\", function () {",
							"    //Comprueba que exista un proyecto p√∫blico llamado con el de las variables de ENV",
							"    const responseJson = pm.response.json();",
							"    const prj = postman.getEnvironmentVariable(\"prj\");",
							"    const json = responseJson.content;",
							"    //console.log(\"get_project_list JSON:\" + JSON.stringify(responseJson))",
							"    //console.log(\"PRJ:\" + prj)",
							"    for(var i = 0; i<json.length;i++) {",
							"        //console.log(json[i].name)",
							"        if(json[i].name == postman.getEnvironmentVariable('testlayer')) {",
							"            console.log(\"LAYER FOUND, ID: \" + json[i].id);",
							"            postman.setEnvironmentVariable(\"lyr_id\", json[i].id);",
							"        }",
							"    }",
							"    ",
							"",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "default"
					}
				],
				"url": {
					"raw": "{{protocol}}://{{url}}/gvsigonline/api/v1/projects/{{prjid}}/layers/",
					"protocol": "{{protocol}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"gvsigonline",
						"api",
						"v1",
						"projects",
						"{{prjid}}",
						"layers",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "get_servers",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"get_servers\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "default"
					}
				],
				"url": {
					"raw": "{{protocol}}://{{url}}/gvsigonline/api/v1/servers/",
					"protocol": "{{protocol}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"gvsigonline",
						"api",
						"v1",
						"servers",
						""
					]
				}
			},
			"response": []
		}
	]
}